
import { toast } from 'sonner';
import { User, SignUpData } from '../types';
import { 
  saveUserToStorage, 
  checkIfEmailExists, 
  generatePassword, 
  handleEmployeeAccounts 
} from '../authUtils';
import { AuthState } from '../useAuthState';

export const signUpOperation = async (
  userData: SignUpData,
  setAuthState: React.Dispatch<React.SetStateAction<AuthState>>
): Promise<void> => {
  setAuthState(prev => ({ ...prev, isLoading: true }));
  
  try {
    // Simulate API call delay
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    // Check if email already exists
    if (checkIfEmailExists(userData.email)) {
      throw new Error('Email already in use');
    }

    // Generate a random password (in a real app, this would be done server-side)
    const generatedPassword = generatePassword();
    
    // In a real app, you would send an email with the generated password here
    console.log(`Generated password for ${userData.email}: ${generatedPassword}`);
    
    // Create new user (in a real app, this would be handled by the backend)
    const newUserId = `3`; // This would be generated by the backend
    const newUser: User = {
      id: newUserId,
      email: userData.email,
      name: userData.name,
      role: 'manager', // Set the main account as a manager role
      agency: userData.agency,
      country: userData.country,
      phone: userData.phone,
      balance: 0,
      verified: false // User starts as unverified
    };

    // Handle employee accounts if they exist
    handleEmployeeAccounts(userData.employees);

    // Set verification states
    setAuthState(prev => ({
      ...prev,
      needsVerification: true,
      pendingVerificationEmail: userData.email
    }));
    
    // In a real app, user data wouldn't be stored locally until after verification
    // But for demo purposes, we'll store it with the verified flag set to false
    saveUserToStorage(newUser);
    
    // Show a message about the OTP
    toast.success('Account created! Check your email for the verification code.');
  } catch (error) {
    if (error instanceof Error) {
      toast.error(error.message);
    } else {
      toast.error('Failed to create account');
    }
    throw error;
  } finally {
    setAuthState(prev => ({ ...prev, isLoading: false }));
  }
};
